#!/bin/bash

# Kubernetes namespace to use for application
NAMESPACE=cv
# MySQL config
MYSQL_DATABASE_NAME=${NAMESPACE}
MYSQL_USER_USERNAME='api'
# Istio config
ISTIO_PROFILE=demo

# Metallb config
kubectl apply -f ./spec/metal.yaml

# Istio installation
istioctl manifest apply \
  --set profile=$ISTIO_PROFILE \
  --set values.gateways.istio-ingressgateway.sds.enabled=true \
  --set values.global.k8sIngress.enabled=true \
  --set values.global.k8sIngress.enableHttps=true \
  --set values.global.k8sIngress.gatewayName=ingressgateway

# Enable istio sidecar auto injection for namespace
kubectl label namespace $NAMESPACE istio-injection=enabled

# Read more at https://istio.io/docs/tasks/traffic-management/ingress/ingress-certmgr/
# Patch install to define tls ingress usage
kubectl -n istio-system \
      patch gateway istio-autogenerated-k8s-ingress --type=json \
        -p='[{"op": "replace", "path": "/spec/servers/1/tls", "value": {"credentialName": "ingress-cert", "mode": "SIMPLE", "privateKey": "sds", "serverCertificate": "sds"}}]'

# Certificate config
kubectl apply -f ./spec/certificates.yaml

# Namespace
kubectl apply -f ./spec/namespace.yaml

# Database secrets dynamic generation
cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Secret
metadata:
  name: mysql-config
  namespace: ${NAMESPACE}
type: Opaque
data:
  MYSQL_DATABASE_NAME: $(echo -n "${MYSQL_DATABASE_NAME}" | base64 -w0)
  MYSQL_ROOT_PASSWORD: $(echo -n "${MYSQL_ROOT_PASSWORD}" | base64 -w0)
  MYSQL_USER_USERNAME: $(echo -n "${MYSQL_USER_USERNAME}" | base64 -w0)
  MYSQL_USER_PASSWORD: $(echo -n "${MYSQL_USER_PASSWORD}" | base64 -w0)
EOF

# Database
kubectl apply -f ./spec/database.yaml

# Rest API
kubectl apply -f ./spec/api.yaml

# Cron Jobs
kubectl apply -f ./spec/cron.yaml

# Istio config
kubectl apply -f ./spec/istio.yaml
